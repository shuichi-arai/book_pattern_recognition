----------------------------------------------------------------------------------------------------
第8章「ニューラルネットワーク」

学習が動的に進んでいく様子をサンプルプログラムで示すことで，理解を深められるように以下のような
サンプルプログラムを用意しました．
----------------------------------------------------------------------------------------------------

1. 分類問題と回帰問題 (8.6節)
    1.Classification_or_Regression/ --+-- XOR.2class.classification.py            --- 分類問題 
                                      |
                                      +-- fittingFunction.regression.py    --- 回帰問題

    ・1.Classification_or_Regression/XOR.2class.classification.py
      分類問題の代表でニューラルネットワークの最初によく出てくる問題であるXORの学習と識別のサンプルを用意しました．
      線形分離できない問題ですが，ニューラルネットワークでは学習できることが分かると思います．
      XORは 入力(0,0) --> 出力 0
            入力(0,1) --> 出力 1
            入力(1,0) --> 出力 1
            入力(1,1) --> 出力 0
     となるようにニューラルネットワークが学習できれば良いわけです．
     プログラムを走らせると最後に学習結果が表示されます．0に近い値，1に近い値が出力されるように学習できたでしょうか？
     '-h' optionで使い方が表示されます．例えば'-u'で中間層のunit数を変更できます．

    ・1.Classification_or_Regression/fittingFunction.regression.py
      回帰問題の代表としては関数近似問題を用意しました．ニューラルネットワーク内には，近似すべき関数の要素は
      全く入っていませんが，多層パーセプトロンで近似できることが分かると思います．
     '-h' optionで使い方が表示されます．例えば'-s'でターゲットの関数の種類を変更できますし，'-u'で中間層のunit数を変更できます．


    ユニット数や学習率などを変化させると何が起きたのか，なぜそうなったのかを考察しましょう．

2. 2クラス認識問題 (8.6.2項)
    2.Gender.2class.classification.py      --- 性別識別 (2クラス問題)
    3章でも扱った性別認識のニューラルネットワーク版プログラムです．
    認識結果を３章のWidrow-Hoffと比較してみましょう．
    比較の結果から，なぜそうなったのかを考察しましょう．

3. 多クラス認識問題 (8.6.3項)
    3.Digits.10class.classification.py     --- 数字認識 (多クラス問題)
    3章でも扱った数字認識のニューラルネットワーク版プログラムです．
    認識結果を３章のWidrow-Hoffと比較してみましょう．
    比較の結果から，なぜそうなったのかを考察しましょう．

4. その他ファイル
    twoLayerNeuralNetwork.py    --- 共通クラスモジュール

    data.gender                 --- 性別識別用パターン
    data.digits                 --- 数字認識用パターン

